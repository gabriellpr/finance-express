{"version":3,"sources":["services/api.js","App.js","index.js"],"names":["api","axios","create","baseURL","App","handleAddCrypto","event","a","preventDefault","target","value","get","response","crypto","data","console","log","BTC","USD","EUR","setState","cryptos","cryptosEUR","ETH","EOS","XRP","state","href","id","className","onClick","this","displayType","decimalprecision","thousandSeparator","prefix","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8VAMeA,EAJHC,IAAMC,OAAO,CACvBC,QAAS,sCC4IIC,E,kDAxIb,aAAe,IAAD,8BACZ,gBAqBFC,gBAtBc,uCAsBI,WAAOC,GAAP,qCAAAC,EAAA,yDAChBD,EAAME,iBACoB,OAAtBF,EAAMG,OAAOC,MAFD,iCAGSV,EAAIW,IAAJ,gCACIL,EAAMG,OAAOC,MADjB,mBAHT,OAGRE,EAHQ,OAORC,EAASD,EAASE,KAExBC,QAAQC,IAAIH,EAAOI,IAAIC,KACvBH,QAAQC,IAAIH,EAAOI,IAAIE,KACjBT,EAAQG,EAAOI,IAAIC,IACzB,EAAKE,SAAS,CAAEC,QAASX,IACzB,EAAKU,SAAS,CAAEE,WAAYT,EAAOI,IAAIE,MAbzB,2BAciB,OAAtBb,EAAMG,OAAOC,MAdR,kCAeSV,EAAIW,IAAJ,gCACIL,EAAMG,OAAOC,MADjB,mBAfT,QAeRE,EAfQ,OAmBRC,EAASD,EAASE,KAExBC,QAAQC,IAAIH,EAAOU,IAAIL,KACjBR,EAAQG,EAAOU,IAAIL,IACzB,EAAKE,SAAS,CAAEC,QAASX,IACzB,EAAKU,SAAS,CAAEE,WAAYT,EAAOU,IAAIJ,MAxBzB,2BAyBiB,OAAtBb,EAAMG,OAAOC,MAzBR,kCA0BSV,EAAIW,IAAJ,gCACIL,EAAMG,OAAOC,MADjB,mBA1BT,QA0BRE,EA1BQ,OA8BRC,EAASD,EAASE,KAExBC,QAAQC,IAAIH,EAAOW,IAAIN,KACjBR,EAAQG,EAAOW,IAAIN,IACzB,EAAKE,SAAS,CAAEC,QAASX,IACzB,EAAKU,SAAS,CAAEE,WAAYT,EAAOW,IAAIL,MAnCzB,2BAoCiB,OAAtBb,EAAMG,OAAOC,MApCR,kCAqCSV,EAAIW,IAAJ,gCACIL,EAAMG,OAAOC,MADjB,mBArCT,QAqCRE,EArCQ,OAyCRC,EAASD,EAASE,KAExBC,QAAQC,IAAIH,EAAOY,IAAIP,KACjBR,EAAQG,EAAOY,IAAIP,IACzB,EAAKE,SAAS,CAAEC,QAASX,IACzB,EAAKU,SAAS,CAAEE,WAAYT,EAAOY,IAAIN,MA9CzB,4CAtBJ,sDAGZ,EAAKO,MAAQ,CACXL,QAAS,EACTC,WAAY,GALF,E,kGAyEZ,OACE,oCACE,gCACE,6BACE,4BACE,uBAAGK,KAAK,gCAAR,WAEF,wBAAIC,GAAG,QAAP,mBACA,4BACE,uBAAGD,KAAK,gCAAR,+BAMN,6BACE,yBAAKE,UAAU,UACb,mEACA,yBAAKD,GAAG,WACN,4BAAQE,QAASC,KAAK1B,gBAAiBK,MAAO,OAA9C,WAGA,4BAAQoB,QAASC,KAAK1B,gBAAiBK,MAAO,OAA9C,YAGA,4BAAQoB,QAASC,KAAK1B,gBAAiBK,MAAO,OAA9C,OAGA,4BAAQoB,QAASC,KAAK1B,gBAAiBK,MAAO,OAA9C,YAKJ,yBAAKkB,GAAG,oBACN,0BAAMC,UAAU,QAAhB,OACA,0BAAMA,UAAU,SACd,kBAAC,IAAD,CACEnB,MAAOqB,KAAKL,MAAML,QAClBW,YAAa,OACbC,iBAAkB,EAClBC,mBAAmB,EACnBC,OAAQ,QAId,yBAAKP,GAAG,oBACN,0BAAMC,UAAU,QAAhB,OACA,0BAAMA,UAAU,SACd,kBAAC,IAAD,CACEnB,MAAOqB,KAAKL,MAAMJ,WAClBU,YAAa,OACbC,iBAAkB,EAClBC,mBAAmB,EACnBC,OAAQ,c,GA/HNC,aCDlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.310b4fdd.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://min-api.cryptocompare.com\",\n});\n\nexport default api;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport NumberFormat from \"react-number-format\";\nimport api from \"./services/api\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      cryptos: 0,\n      cryptosEUR: 0,\n    };\n  }\n\n  componentDidMount() {\n    /*\n    axios\n      .get(\n        \"https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,ETH&tsyms=USD\"\n      )\n      .then((res) => {\n        const cryptos = res.data;\n        console.log(cryptos);\n        this.setState({ cryptos: cryptos });\n      });\n      */\n  }\n  handleAddCrypto = async (event) => {\n    event.preventDefault();\n    if (event.target.value == \"BTC\") {\n      const response = await api.get(\n        `data/pricemulti?fsyms=${event.target.value}&tsyms=USD,EUR`\n      );\n\n      const crypto = response.data;\n\n      console.log(crypto.BTC.USD);\n      console.log(crypto.BTC.EUR);\n      const value = crypto.BTC.USD;\n      this.setState({ cryptos: value });\n      this.setState({ cryptosEUR: crypto.BTC.EUR });\n    } else if (event.target.value == \"ETH\") {\n      const response = await api.get(\n        `data/pricemulti?fsyms=${event.target.value}&tsyms=USD,EUR`\n      );\n\n      const crypto = response.data;\n\n      console.log(crypto.ETH.USD);\n      const value = crypto.ETH.USD;\n      this.setState({ cryptos: value });\n      this.setState({ cryptosEUR: crypto.ETH.EUR });\n    } else if (event.target.value == \"EOS\") {\n      const response = await api.get(\n        `data/pricemulti?fsyms=${event.target.value}&tsyms=USD,EUR`\n      );\n\n      const crypto = response.data;\n\n      console.log(crypto.EOS.USD);\n      const value = crypto.EOS.USD;\n      this.setState({ cryptos: value });\n      this.setState({ cryptosEUR: crypto.EOS.EUR });\n    } else if (event.target.value == \"XRP\") {\n      const response = await api.get(\n        `data/pricemulti?fsyms=${event.target.value}&tsyms=USD,EUR`\n      );\n\n      const crypto = response.data;\n\n      console.log(crypto.XRP.USD);\n      const value = crypto.XRP.USD;\n      this.setState({ cryptos: value });\n      this.setState({ cryptosEUR: crypto.XRP.EUR });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <header>\n          <nav>\n            <li>\n              <a href=\"https://gabriellpr.github.io\">Robots</a>\n            </li>\n            <li id=\"logo\">Finance Express</li>\n            <li>\n              <a href=\"https://gabriellpr.github.io\">\n                Get back to my portfolio\n              </a>\n            </li>\n          </nav>\n        </header>\n        <div>\n          <div className=\"select\">\n            <p>Click on your favorite cryptocoin...</p>\n            <div id=\"buttons\">\n              <button onClick={this.handleAddCrypto} value={\"BTC\"}>\n                Bitcoin\n              </button>\n              <button onClick={this.handleAddCrypto} value={\"ETH\"}>\n                Ethereum\n              </button>\n              <button onClick={this.handleAddCrypto} value={\"EOS\"}>\n                EOS\n              </button>\n              <button onClick={this.handleAddCrypto} value={\"XRP\"}>\n                Ripple\n              </button>\n            </div>\n          </div>\n          <div id=\"crypto-container\">\n            <span className=\"left\">U$D</span>\n            <span className=\"right\">\n              <NumberFormat\n                value={this.state.cryptos}\n                displayType={\"text\"}\n                decimalprecision={2}\n                thousandSeparator={true}\n                prefix={\"$\"}\n              />\n            </span>\n          </div>\n          <div id=\"crypto-container\">\n            <span className=\"left\">EUR</span>\n            <span className=\"right\">\n              <NumberFormat\n                value={this.state.cryptosEUR}\n                displayType={\"text\"}\n                decimalprecision={2}\n                thousandSeparator={true}\n                prefix={\"$\"}\n              />\n            </span>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}